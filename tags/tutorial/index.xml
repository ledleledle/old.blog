<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tutorial on ledleledle&#39;s Blog</title>
    <link>https://ledleledle.github.io/blog/tags/tutorial/</link>
    <description>Recent content in tutorial on ledleledle&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 03 May 2020 12:03:50 +0700</lastBuildDate>
    
	<atom:link href="https://ledleledle.github.io/blog/tags/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fix &#34;a stop job is running for session 2&#34; pada Arch based distro</title>
      <link>https://ledleledle.github.io/blog/post/fix-a-stop-job-is-running-for-session-2/</link>
      <pubDate>Sun, 03 May 2020 12:03:50 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/fix-a-stop-job-is-running-for-session-2/</guid>
      <description>Ditutorial kali ini saya akan membahas tentang error yang sangat mengganggu pada Arch based distro (terutama Manjaro). Saya seringkali berhadapan dengan error yang bertuliskan a stop job is running for session 2. Penampakannya seperti gambar dibawah.     Gimana tidak mengganggu, kalian harus menunggu beberapa menit hanya untuk shutdown laptop/pc kalian. Dan setelah pencarian yang lumayan panjang, akhirnya saya menemukan solusinya CMIW :)
Yang perlu kalian install yaitu paket watchdog.</description>
    </item>
    
    <item>
      <title>Device Android Tidak Terdeteksi Di Arch Linux</title>
      <link>https://ledleledle.github.io/blog/post/device-android-tidak-terdeteksi-di-arch-linux/</link>
      <pubDate>Sun, 03 May 2020 11:58:17 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/device-android-tidak-terdeteksi-di-arch-linux/</guid>
      <description>Mungkin kalian pernah/sedang mengalaminya, setelah installasi Arch Linux kalian tidak bisa mengakses MTP Android, atau pertama normal-normal saja tapi tiba-tiba besoknya tidak bisa digunakan. Berikut solusinya.
Install paket ini dan masalah anda beres.
$ sudo pacman -S gvfs-mtp Sumber  https://wiki.archlinux.org/index.php/Media_Transfer_Protocol  Sekian tutorial yang pendek ini, semoga bermanfaat :&#39;)</description>
    </item>
    
    <item>
      <title>Kostumisasi Mozila Firefox dengan mengubah userChrome.css</title>
      <link>https://ledleledle.github.io/blog/post/kostumisasi-mozila-firefox/</link>
      <pubDate>Thu, 30 Apr 2020 17:22:33 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/kostumisasi-mozila-firefox/</guid>
      <description>Karena di Grup Facebook banyak yang tanya tentang ini, maka ane buatkan tutorialnya. Ok langsung saja ke tutorial.
Pertama, kita masuk dulu ke menu config, buka melalui search bar dengan mengetikkan about:config. Klik Accept the Risk and Continue.
Kedua, cari toolkit.legacyUserProfileCustomizations.stylesheets. Lalu ubah valuenya dari False menjadi True.
Langkah selanjutnya yaitu membuat/menyunting file userChrome.css. Cara mengetahui direktori penyimpanan file confignya yaitu : Pergi ke Menu Help &amp;gt; Troubleshooting Information.     Cari pada pada bagian Profile Directory, lalu klik Open Directory.</description>
    </item>
    
    <item>
      <title>Host Website Hugo di Github</title>
      <link>https://ledleledle.github.io/blog/post/host-hugo-github/</link>
      <pubDate>Wed, 29 Apr 2020 11:47:10 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/host-hugo-github/</guid>
      <description>Sebelumnya saya telah membuat tutorial How I Made Hugo Blog. Ini lanjutan yang telah saya janjikan. Dan maaf saya sekarang pakai Bahasa Indonesia, karena ternyata setelah saya membuat postingan tersebut ternyata Bahasa Inggris saya masih kacau dan terlihat di postingan sebelumnya bahasanya kacau sekali (jadi malu). Yah tidak usah basa-basi lagi.
Tutorial 1. Generate Static Files Jika sebelumnya kita hanya menjalankan server local dengan perintah hugo serve. Sekarang kita akan meng-generate file statis dengan perintah hugo -D.</description>
    </item>
    
    <item>
      <title>Mendapatkan Pesan Error lib32-nss: /usr/lib32/p11-kit-trust.so exists in filesystem Saat Update Arch Linux</title>
      <link>https://ledleledle.github.io/blog/post/lib32-nss-exists-in-filesystem/</link>
      <pubDate>Wed, 29 Apr 2020 11:31:33 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/lib32-nss-exists-in-filesystem/</guid>
      <description>Intro Pernahkah kalian dapat pesan error seperti ini saat anda melakukan update Arch Linux pacman -Syu? Pesan error ini dikarenakan paket nss dan lib32-nss sebelum versi 3.51.1-1 masing-masing tidak memiliki soname. Lalu pada versi 3.51.1-1 telah ditambahkan soname tersebut, sehingga update selanjutnya perlu menimpa file yang tidak dilacak yang dibuat oleh ldconfig.
Solusinya Caranya mudah teman-teman. Saat update gunakan perintah ini.
@root&amp;gt; pacman -Syu --overwrite /usr/lib\*/p11-kit-trust.so Tadaa.. Pesan error sudah tidak muncul lagi dan proses update tidak gagal lagi.</description>
    </item>
    
    <item>
      <title>Reflash Original Firmware TP-Link MR3420 V.2</title>
      <link>https://ledleledle.github.io/blog/post/reflash-original-firmware-tp-link-mr3420-v2/</link>
      <pubDate>Fri, 24 Apr 2020 12:50:06 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/reflash-original-firmware-tp-link-mr3420-v2/</guid>
      <description>Halo teman-teman, kali ini saya akan membahas tentang bagaimana cara reflash original firmware dari OpenWRT pada router TP-Link MR3420 V.2.
Spesifikasi dan Kebutuhan  Router (sudah pasti) OS Linux Firmware bawaan TP-Link disini  Tutorial  Step pertama, ekstrak file firmware terlebih dahulu $ unzip &amp;#34;TL-MR3420_V2_150319.zip&amp;#34;
  Rename file firmware dengan nama firmware.bin agar dalam pengerjaannya jadi lebih mudah dan simple. $ mv &amp;#34;mr3420v2_en_3_16_9_up_boot(150319).bin&amp;#34; firmware.bin
  Hapus beberapa byte dari Firmware dengan perintah dd .</description>
    </item>
    
    <item>
      <title>How I Made Hugo Blog</title>
      <link>https://ledleledle.github.io/blog/post/how-i-made-hugo-blog/</link>
      <pubDate>Fri, 24 Apr 2020 10:40:55 +0700</pubDate>
      
      <guid>https://ledleledle.github.io/blog/post/how-i-made-hugo-blog/</guid>
      <description>Intro Hey guys, i&amp;rsquo;ll teach you how to made blog with hugo. First i&amp;rsquo;ll explain a bit about hugo, Hugo is a fast and modern static site generator written in Go language, so basically you don&amp;rsquo;t need some back-end code. You just install it, made a content, then generate your html code. Simple enought right. So let&amp;rsquo;s jump to tutorial.
Specification and requirements First, i use Arch Linux Distros, the installation maybe a bit differ, but others absolutelly same.</description>
    </item>
    
  </channel>
</rss>